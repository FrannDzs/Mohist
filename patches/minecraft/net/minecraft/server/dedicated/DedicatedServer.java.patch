--- a/net/minecraft/server/dedicated/DedicatedServer.java
+++ b/net/minecraft/server/dedicated/DedicatedServer.java
@@ -62,6 +_,7 @@
 import net.minecraft.world.level.storage.WorldData;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
+import org.bukkit.command.CommandSender;
 
 public class DedicatedServer extends MinecraftServer implements ServerInterface {
    static final Logger f_139598_ = LogManager.getLogger();
@@ -70,9 +_,9 @@
    private static final Pattern f_139599_ = Pattern.compile("^[a-fA-F0-9]{40}$");
    public final List<ConsoleInput> f_139600_ = Collections.synchronizedList(Lists.newArrayList());
    private QueryThreadGs4 f_139601_;
-   private final RconConsoleSource f_139602_;
+   public final RconConsoleSource f_139602_;
    private RconThread f_139603_;
-   private final DedicatedServerSettings f_139604_;
+   public DedicatedServerSettings f_139604_;
    @Nullable
    private MinecraftServerGui f_139605_;
    @Nullable
@@ -91,6 +_,7 @@
    public boolean m_7038_() throws IOException {
       Thread thread = new Thread("Server console handler") {
          public void run() {
+            if (net.minecraftforge.server.console.TerminalHandler.handleCommands(DedicatedServer.this)) return;
             BufferedReader bufferedreader = new BufferedReader(new InputStreamReader(System.in, StandardCharsets.UTF_8));
 
             String s1;
@@ -122,6 +_,8 @@
          this.m_129913_(dedicatedserverproperties.f_139730_);
       }
 
+      org.spigotmc.SpigotConfig.init((java.io.File) options.valueOf("spigot-settings"));
+
       this.m_129997_(dedicatedserverproperties.f_139733_);
       this.m_129999_(dedicatedserverproperties.f_139734_);
       this.m_129853_(dedicatedserverproperties.f_139735_, this.m_139664_());
@@ -171,11 +_,13 @@
          SkullBlockEntity.m_59771_(this.m_129925_());
          SkullBlockEntity.m_182462_(this);
          GameProfileCache.m_11004_(this.m_129797_());
+         if (!net.minecraftforge.fmllegacy.server.ServerLifecycleHooks.handleServerAboutToStart(this)) return false;
          f_139598_.info("Preparing level \"{}\"", (Object)this.m_7123_());
          this.m_130006_();
          long j = Util.m_137569_() - i;
          String s = String.format(Locale.ROOT, "%.3fs", (double)j / 1.0E9D);
          f_139598_.info("Done ({})! For help, type \"help\"", (Object)s);
+         this.f_129726_ = Util.m_137550_(); //Forge: Update server time to prevent watchdog/spaming during long load.
          if (dedicatedserverproperties.f_139744_ != null) {
             this.m_129900_().m_46170_(GameRules.f_46153_).m_46246_(dedicatedserverproperties.f_139744_, this);
          }
@@ -199,12 +_,13 @@
          }
 
          Items.f_41852_.m_6787_(CreativeModeTab.f_40754_, NonNullList.m_122779_());
+         // <3 you Grum for this, saves us ~30 patch files! --^
          if (dedicatedserverproperties.f_139721_) {
             MinecraftServerStatistics.m_18328_(this);
             f_139598_.info("JMX monitoring enabled");
          }
 
-         return true;
+         return net.minecraftforge.fmllegacy.server.ServerLifecycleHooks.handleServerStarting(this);
       }
    }
 
@@ -558,6 +_,11 @@
       return false;
    }
 
+   @Override //Forge: Enable formated text for colors in console.
+   public void m_6352_(net.minecraft.network.chat.Component message, java.util.UUID p_108776_) {
+      f_139598_.info(message.getString());
+   }
+
    public int m_7186_(int p_139659_) {
       return this.m_7913_().f_139723_ * p_139659_ / 100;
    }
@@ -601,4 +_,15 @@
    public Component m_141958_() {
       return this.f_142863_;
    }
+
+   // CraftBukkit start
+   public boolean isDebugging() {
+      return false;
+   }
+
+   @Override
+   public CommandSender getBukkitSender(CommandSourceStack wrapper) {
+      return console;
+   }
+   // CraftBukkit end
 }
