--- a/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
+++ b/net/minecraft/network/protocol/handshake/ClientIntentionPacket.java
@@ -1,16 +_,30 @@
 package net.minecraft.network.protocol.handshake;
 
+import com.google.gson.Gson;
+import com.mojang.authlib.properties.Property;
 import net.minecraft.SharedConstants;
 import net.minecraft.network.ConnectionProtocol;
 import net.minecraft.network.FriendlyByteBuf;
 import net.minecraft.network.protocol.Packet;
+import net.minecraftforge.fmllegacy.network.FMLNetworkConstants;
+import net.minecraftforge.fmllegacy.network.NetworkHooks;
+import org.spigotmc.SpigotConfig;
+
+import java.util.Objects;
 
 public class ClientIntentionPacket implements Packet<ServerHandshakePacketListener> {
    private static final int f_179799_ = 255;
    private final int f_134720_;
-   private final String f_134721_;
+   public String f_134721_;
+   public String original_ip;
    private final int f_134722_;
    private final ConnectionProtocol f_134723_;
+   private String fmlVersion = net.minecraftforge.fmllegacy.network.FMLNetworkConstants.NETVERSION;
+
+   // Mohist start - Support ip forward
+   private static final String EXTRA_DATA = "extraData";
+   private static final Gson GSON = new Gson();
+   // Mohist end
 
    public ClientIntentionPacket(String p_134726_, int p_134727_, ConnectionProtocol p_134728_) {
       this.f_134720_ = SharedConstants.m_136187_().getProtocolVersion();
@@ -21,14 +_,31 @@
 
    public ClientIntentionPacket(FriendlyByteBuf p_179801_) {
       this.f_134720_ = p_179801_.m_130242_();
-      this.f_134721_ = p_179801_.m_130136_(255);
+      String hostName = p_179801_.m_130136_(Short.MAX_VALUE); // Spigot
       this.f_134722_ = p_179801_.readUnsignedShort();
       this.f_134723_ = ConnectionProtocol.m_129583_(p_179801_.m_130242_());
+      this.fmlVersion = net.minecraftforge.fmllegacy.network.NetworkHooks.getFMLVersion(hostName);
+      // Mohist start - Support ip forward
+      if (SpigotConfig.bungee && !Objects.equals(this.fmlVersion, FMLNetworkConstants.NETVERSION)) {
+         String[] split = this.f_134721_.split("\0");
+         if (split.length == 4) {
+            Property[] properties = GSON.fromJson(split[3], Property[].class);
+            for (Property property : properties) {
+               if (Objects.equals(property.getName(), EXTRA_DATA)) {
+                  String extraData = property.getValue().replace("\1", "\0");
+                  this.fmlVersion = NetworkHooks.getFMLVersion(split[0] + extraData);
+               }
+            }
+         }
+      }
+      // Mohist end
+      this.original_ip = this.f_134721_;
+      this.f_134721_ = hostName.split("\0")[0];
    }
 
    public void m_5779_(FriendlyByteBuf p_134737_) {
       p_134737_.m_130130_(this.f_134720_);
-      p_134737_.m_130070_(this.f_134721_);
+      p_134737_.m_130070_(this.f_134721_ + "\0"+ net.minecraftforge.fmllegacy.network.FMLNetworkConstants.NETVERSION+"\0");
       p_134737_.writeShort(this.f_134722_);
       p_134737_.m_130130_(this.f_134723_.m_129582_());
    }
@@ -51,5 +_,9 @@
 
    public int m_179803_() {
       return this.f_134722_;
+   }
+
+   public String getFMLVersion() {
+      return this.fmlVersion;
    }
 }
